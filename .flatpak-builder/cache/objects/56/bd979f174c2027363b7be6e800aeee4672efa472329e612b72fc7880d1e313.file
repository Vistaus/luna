/* Color.c generated by valac 0.40.11, the Vala compiler
 * generated from Color.vala, do not modify */

/*
* Copyright (C) 2018  Carlos Lopez <calo_lrc@hotmail.com>
* 
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as published
* by the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Affero General Public License for more details.
* 
* You should have received a copy of the GNU Affero General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
* 
*/


#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>


#define APP_ENUMS_TYPE_COLOR (app_enums_color_get_type ())

typedef enum  {
	APP_ENUMS_COLOR_WHITE,
	APP_ENUMS_COLOR_BLACK,
	APP_ENUMS_COLOR_PINK,
	APP_ENUMS_COLOR_RED,
	APP_ENUMS_COLOR_ORANGE,
	APP_ENUMS_COLOR_YELLOW,
	APP_ENUMS_COLOR_GREEN,
	APP_ENUMS_COLOR_TEAL,
	APP_ENUMS_COLOR_BLUE,
	APP_ENUMS_COLOR_PURPLE,
	APP_ENUMS_COLOR_COCO,
	APP_ENUMS_COLOR_GRADIENT_BLUE_GREEN,
	APP_ENUMS_COLOR_GRADIENT_PURPLE_RED,
	APP_ENUMS_COLOR_GRADIENT_PRIDE,
	APP_ENUMS_COLOR_TRANS_WHITE,
	APP_ENUMS_COLOR_TRANS_BLACK,
	APP_ENUMS_COLOR_SEMITRANS_WHITE,
	APP_ENUMS_COLOR_SEMITRANS_BLACK
} AppEnumsColor;



GType app_enums_color_get_type (void) G_GNUC_CONST;
gchar* app_enums_color_to_string (AppEnumsColor self);
gchar* app_enums_color_string_to_css_path (const gchar* color);
#define APP_CONFIGS_CONSTANTS_URL_CSS_WHITE "/com/github/calo001/luna/css/style_white.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_DARK "/com/github/calo001/luna/css/style_dark.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_PINK "/com/github/calo001/luna/css/style_pink.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_RED "/com/github/calo001/luna/css/style_red.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_ORANGE "/com/github/calo001/luna/css/style_orange.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_YELLOW "/com/github/calo001/luna/css/style_yellow.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_GREEN "/com/github/calo001/luna/css/style_green.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_TEAL "/com/github/calo001/luna/css/style_teal.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_BLUE "/com/github/calo001/luna/css/style_blue.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_PURPLE "/com/github/calo001/luna/css/style_purple.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_COCO "/com/github/calo001/luna/css/style_coco.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_GRADIENT_BLUE_GREEN "/com/github/calo001/luna/css/style_gradient_blue_green.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_GRADIENT_PURPLE_RED "/com/github/calo001/luna/css/style_gradient_purple_red.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_PRIDE "/com/github/calo001/luna/css/style_gradient_pride.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_LIGHT_TRANS "/com/github/calo001/luna/css/style_light_transparent.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_DARK_TRANS "/com/github/calo001/luna/css/style_dark_transparent.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_LIGHT_SEMITRANS "/com/github/calo001/luna/css/style_light_semitrans.css"
#define APP_CONFIGS_CONSTANTS_URL_CSS_DARK_SEMITRANS "/com/github/calo001/luna/css/style_dark_semitrans.css"


gchar*
app_enums_color_to_string (AppEnumsColor self)
{
	gchar* result = NULL;
#line 43 "/run/build/Luna/src/enums/Color.vala"
	switch (self) {
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_WHITE:
#line 86 "Color.c"
		{
			gchar* _tmp0_;
#line 44 "/run/build/Luna/src/enums/Color.vala"
			_tmp0_ = g_strdup ("white");
#line 44 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp0_;
#line 44 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 95 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_BLACK:
#line 99 "Color.c"
		{
			gchar* _tmp1_;
#line 45 "/run/build/Luna/src/enums/Color.vala"
			_tmp1_ = g_strdup ("black");
#line 45 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp1_;
#line 45 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 108 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_PINK:
#line 112 "Color.c"
		{
			gchar* _tmp2_;
#line 46 "/run/build/Luna/src/enums/Color.vala"
			_tmp2_ = g_strdup ("pink");
#line 46 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp2_;
#line 46 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 121 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_RED:
#line 125 "Color.c"
		{
			gchar* _tmp3_;
#line 47 "/run/build/Luna/src/enums/Color.vala"
			_tmp3_ = g_strdup ("red");
#line 47 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp3_;
#line 47 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 134 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_ORANGE:
#line 138 "Color.c"
		{
			gchar* _tmp4_;
#line 48 "/run/build/Luna/src/enums/Color.vala"
			_tmp4_ = g_strdup ("orange");
#line 48 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp4_;
#line 48 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 147 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_YELLOW:
#line 151 "Color.c"
		{
			gchar* _tmp5_;
#line 49 "/run/build/Luna/src/enums/Color.vala"
			_tmp5_ = g_strdup ("yellow");
#line 49 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp5_;
#line 49 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 160 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_GREEN:
#line 164 "Color.c"
		{
			gchar* _tmp6_;
#line 50 "/run/build/Luna/src/enums/Color.vala"
			_tmp6_ = g_strdup ("green");
#line 50 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp6_;
#line 50 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 173 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_BLUE:
#line 177 "Color.c"
		{
			gchar* _tmp7_;
#line 51 "/run/build/Luna/src/enums/Color.vala"
			_tmp7_ = g_strdup ("blue");
#line 51 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp7_;
#line 51 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 186 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_TEAL:
#line 190 "Color.c"
		{
			gchar* _tmp8_;
#line 52 "/run/build/Luna/src/enums/Color.vala"
			_tmp8_ = g_strdup ("teal");
#line 52 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp8_;
#line 52 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 199 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_PURPLE:
#line 203 "Color.c"
		{
			gchar* _tmp9_;
#line 53 "/run/build/Luna/src/enums/Color.vala"
			_tmp9_ = g_strdup ("purple");
#line 53 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp9_;
#line 53 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 212 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_COCO:
#line 216 "Color.c"
		{
			gchar* _tmp10_;
#line 54 "/run/build/Luna/src/enums/Color.vala"
			_tmp10_ = g_strdup ("coco");
#line 54 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp10_;
#line 54 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 225 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_GRADIENT_BLUE_GREEN:
#line 229 "Color.c"
		{
			gchar* _tmp11_;
#line 55 "/run/build/Luna/src/enums/Color.vala"
			_tmp11_ = g_strdup ("gradient_blue_green");
#line 55 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp11_;
#line 55 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 238 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_GRADIENT_PURPLE_RED:
#line 242 "Color.c"
		{
			gchar* _tmp12_;
#line 56 "/run/build/Luna/src/enums/Color.vala"
			_tmp12_ = g_strdup ("gradient_purple_red");
#line 56 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp12_;
#line 56 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 251 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_GRADIENT_PRIDE:
#line 255 "Color.c"
		{
			gchar* _tmp13_;
#line 57 "/run/build/Luna/src/enums/Color.vala"
			_tmp13_ = g_strdup ("gradient_pride");
#line 57 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp13_;
#line 57 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 264 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_TRANS_WHITE:
#line 268 "Color.c"
		{
			gchar* _tmp14_;
#line 58 "/run/build/Luna/src/enums/Color.vala"
			_tmp14_ = g_strdup ("transparent_white");
#line 58 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp14_;
#line 58 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 277 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_TRANS_BLACK:
#line 281 "Color.c"
		{
			gchar* _tmp15_;
#line 59 "/run/build/Luna/src/enums/Color.vala"
			_tmp15_ = g_strdup ("transparent_black");
#line 59 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp15_;
#line 59 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 290 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_SEMITRANS_WHITE:
#line 294 "Color.c"
		{
			gchar* _tmp16_;
#line 60 "/run/build/Luna/src/enums/Color.vala"
			_tmp16_ = g_strdup ("semitransparent_white");
#line 60 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp16_;
#line 60 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 303 "Color.c"
		}
#line 43 "/run/build/Luna/src/enums/Color.vala"
		case APP_ENUMS_COLOR_SEMITRANS_BLACK:
#line 307 "Color.c"
		{
			gchar* _tmp17_;
#line 61 "/run/build/Luna/src/enums/Color.vala"
			_tmp17_ = g_strdup ("semitransparent_black");
#line 61 "/run/build/Luna/src/enums/Color.vala"
			result = _tmp17_;
#line 61 "/run/build/Luna/src/enums/Color.vala"
			return result;
#line 316 "Color.c"
		}
		default:
		{
#line 62 "/run/build/Luna/src/enums/Color.vala"
			g_assert_not_reached ();
#line 322 "Color.c"
		}
	}
}


gchar*
app_enums_color_string_to_css_path (const gchar* color)
{
	gchar* result = NULL;
	const gchar* _tmp0_;
	GQuark _tmp2_ = 0U;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label0 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label1 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label2 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label3 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label4 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label5 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label6 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label7 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label8 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label9 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label10 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label11 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label12 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label13 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label14 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label15 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label16 = 0;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	static GQuark _tmp1_label17 = 0;
#line 66 "/run/build/Luna/src/enums/Color.vala"
	g_return_val_if_fail (color != NULL, NULL);
#line 67 "/run/build/Luna/src/enums/Color.vala"
	_tmp0_ = color;
#line 67 "/run/build/Luna/src/enums/Color.vala"
	_tmp2_ = (NULL == _tmp0_) ? 0 : g_quark_from_string (_tmp0_);
#line 67 "/run/build/Luna/src/enums/Color.vala"
	if (_tmp2_ == ((0 != _tmp1_label0) ? _tmp1_label0 : (_tmp1_label0 = g_quark_from_static_string ("white")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 380 "Color.c"
			default:
			{
				gchar* _tmp3_;
#line 68 "/run/build/Luna/src/enums/Color.vala"
				_tmp3_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_WHITE);
#line 68 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp3_;
#line 68 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 390 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label1) ? _tmp1_label1 : (_tmp1_label1 = g_quark_from_static_string ("black")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 396 "Color.c"
			default:
			{
				gchar* _tmp4_;
#line 69 "/run/build/Luna/src/enums/Color.vala"
				_tmp4_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_DARK);
#line 69 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp4_;
#line 69 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 406 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label2) ? _tmp1_label2 : (_tmp1_label2 = g_quark_from_static_string ("pink")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 412 "Color.c"
			default:
			{
				gchar* _tmp5_;
#line 70 "/run/build/Luna/src/enums/Color.vala"
				_tmp5_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_PINK);
#line 70 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp5_;
#line 70 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 422 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label3) ? _tmp1_label3 : (_tmp1_label3 = g_quark_from_static_string ("red")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 428 "Color.c"
			default:
			{
				gchar* _tmp6_;
#line 71 "/run/build/Luna/src/enums/Color.vala"
				_tmp6_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_RED);
#line 71 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp6_;
#line 71 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 438 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label4) ? _tmp1_label4 : (_tmp1_label4 = g_quark_from_static_string ("orange")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 444 "Color.c"
			default:
			{
				gchar* _tmp7_;
#line 72 "/run/build/Luna/src/enums/Color.vala"
				_tmp7_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_ORANGE);
#line 72 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp7_;
#line 72 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 454 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label5) ? _tmp1_label5 : (_tmp1_label5 = g_quark_from_static_string ("yellow")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 460 "Color.c"
			default:
			{
				gchar* _tmp8_;
#line 73 "/run/build/Luna/src/enums/Color.vala"
				_tmp8_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_YELLOW);
#line 73 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp8_;
#line 73 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 470 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label6) ? _tmp1_label6 : (_tmp1_label6 = g_quark_from_static_string ("green")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 476 "Color.c"
			default:
			{
				gchar* _tmp9_;
#line 74 "/run/build/Luna/src/enums/Color.vala"
				_tmp9_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_GREEN);
#line 74 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp9_;
#line 74 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 486 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label7) ? _tmp1_label7 : (_tmp1_label7 = g_quark_from_static_string ("teal")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 492 "Color.c"
			default:
			{
				gchar* _tmp10_;
#line 75 "/run/build/Luna/src/enums/Color.vala"
				_tmp10_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_TEAL);
#line 75 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp10_;
#line 75 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 502 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label8) ? _tmp1_label8 : (_tmp1_label8 = g_quark_from_static_string ("blue")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 508 "Color.c"
			default:
			{
				gchar* _tmp11_;
#line 76 "/run/build/Luna/src/enums/Color.vala"
				_tmp11_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_BLUE);
#line 76 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp11_;
#line 76 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 518 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label9) ? _tmp1_label9 : (_tmp1_label9 = g_quark_from_static_string ("purple")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 524 "Color.c"
			default:
			{
				gchar* _tmp12_;
#line 77 "/run/build/Luna/src/enums/Color.vala"
				_tmp12_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_PURPLE);
#line 77 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp12_;
#line 77 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 534 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label10) ? _tmp1_label10 : (_tmp1_label10 = g_quark_from_static_string ("coco")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 540 "Color.c"
			default:
			{
				gchar* _tmp13_;
#line 78 "/run/build/Luna/src/enums/Color.vala"
				_tmp13_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_COCO);
#line 78 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp13_;
#line 78 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 550 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label11) ? _tmp1_label11 : (_tmp1_label11 = g_quark_from_static_string ("gradient_blue_green")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 556 "Color.c"
			default:
			{
				gchar* _tmp14_;
#line 79 "/run/build/Luna/src/enums/Color.vala"
				_tmp14_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_GRADIENT_BLUE_GREEN);
#line 79 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp14_;
#line 79 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 566 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label12) ? _tmp1_label12 : (_tmp1_label12 = g_quark_from_static_string ("gradient_purple_red")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 572 "Color.c"
			default:
			{
				gchar* _tmp15_;
#line 80 "/run/build/Luna/src/enums/Color.vala"
				_tmp15_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_GRADIENT_PURPLE_RED);
#line 80 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp15_;
#line 80 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 582 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label13) ? _tmp1_label13 : (_tmp1_label13 = g_quark_from_static_string ("gradient_pride")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 588 "Color.c"
			default:
			{
				gchar* _tmp16_;
#line 81 "/run/build/Luna/src/enums/Color.vala"
				_tmp16_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_PRIDE);
#line 81 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp16_;
#line 81 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 598 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label14) ? _tmp1_label14 : (_tmp1_label14 = g_quark_from_static_string ("transparent_white")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 604 "Color.c"
			default:
			{
				gchar* _tmp17_;
#line 82 "/run/build/Luna/src/enums/Color.vala"
				_tmp17_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_LIGHT_TRANS);
#line 82 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp17_;
#line 82 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 614 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label15) ? _tmp1_label15 : (_tmp1_label15 = g_quark_from_static_string ("transparent_black")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 620 "Color.c"
			default:
			{
				gchar* _tmp18_;
#line 83 "/run/build/Luna/src/enums/Color.vala"
				_tmp18_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_DARK_TRANS);
#line 83 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp18_;
#line 83 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 630 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label16) ? _tmp1_label16 : (_tmp1_label16 = g_quark_from_static_string ("semitransparent_white")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 636 "Color.c"
			default:
			{
				gchar* _tmp19_;
#line 84 "/run/build/Luna/src/enums/Color.vala"
				_tmp19_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_LIGHT_SEMITRANS);
#line 84 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp19_;
#line 84 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 646 "Color.c"
			}
		}
	} else if (_tmp2_ == ((0 != _tmp1_label17) ? _tmp1_label17 : (_tmp1_label17 = g_quark_from_static_string ("semitransparent_black")))) {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 652 "Color.c"
			default:
			{
				gchar* _tmp20_;
#line 85 "/run/build/Luna/src/enums/Color.vala"
				_tmp20_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_DARK_SEMITRANS);
#line 85 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp20_;
#line 85 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 662 "Color.c"
			}
		}
	} else {
#line 67 "/run/build/Luna/src/enums/Color.vala"
		switch (0) {
#line 668 "Color.c"
			default:
			{
				gchar* _tmp21_;
#line 86 "/run/build/Luna/src/enums/Color.vala"
				_tmp21_ = g_strdup (APP_CONFIGS_CONSTANTS_URL_CSS_GRADIENT_BLUE_GREEN);
#line 86 "/run/build/Luna/src/enums/Color.vala"
				result = _tmp21_;
#line 86 "/run/build/Luna/src/enums/Color.vala"
				return result;
#line 678 "Color.c"
			}
		}
	}
}


GType
app_enums_color_get_type (void)
{
	static volatile gsize app_enums_color_type_id__volatile = 0;
	if (g_once_init_enter (&app_enums_color_type_id__volatile)) {
		static const GEnumValue values[] = {{APP_ENUMS_COLOR_WHITE, "APP_ENUMS_COLOR_WHITE", "white"}, {APP_ENUMS_COLOR_BLACK, "APP_ENUMS_COLOR_BLACK", "black"}, {APP_ENUMS_COLOR_PINK, "APP_ENUMS_COLOR_PINK", "pink"}, {APP_ENUMS_COLOR_RED, "APP_ENUMS_COLOR_RED", "red"}, {APP_ENUMS_COLOR_ORANGE, "APP_ENUMS_COLOR_ORANGE", "orange"}, {APP_ENUMS_COLOR_YELLOW, "APP_ENUMS_COLOR_YELLOW", "yellow"}, {APP_ENUMS_COLOR_GREEN, "APP_ENUMS_COLOR_GREEN", "green"}, {APP_ENUMS_COLOR_TEAL, "APP_ENUMS_COLOR_TEAL", "teal"}, {APP_ENUMS_COLOR_BLUE, "APP_ENUMS_COLOR_BLUE", "blue"}, {APP_ENUMS_COLOR_PURPLE, "APP_ENUMS_COLOR_PURPLE", "purple"}, {APP_ENUMS_COLOR_COCO, "APP_ENUMS_COLOR_COCO", "coco"}, {APP_ENUMS_COLOR_GRADIENT_BLUE_GREEN, "APP_ENUMS_COLOR_GRADIENT_BLUE_GREEN", "gradient-blue-green"}, {APP_ENUMS_COLOR_GRADIENT_PURPLE_RED, "APP_ENUMS_COLOR_GRADIENT_PURPLE_RED", "gradient-purple-red"}, {APP_ENUMS_COLOR_GRADIENT_PRIDE, "APP_ENUMS_COLOR_GRADIENT_PRIDE", "gradient-pride"}, {APP_ENUMS_COLOR_TRANS_WHITE, "APP_ENUMS_COLOR_TRANS_WHITE", "trans-white"}, {APP_ENUMS_COLOR_TRANS_BLACK, "APP_ENUMS_COLOR_TRANS_BLACK", "trans-black"}, {APP_ENUMS_COLOR_SEMITRANS_WHITE, "APP_ENUMS_COLOR_SEMITRANS_WHITE", "semitrans-white"}, {APP_ENUMS_COLOR_SEMITRANS_BLACK, "APP_ENUMS_COLOR_SEMITRANS_BLACK", "semitrans-black"}, {0, NULL, NULL}};
		GType app_enums_color_type_id;
		app_enums_color_type_id = g_enum_register_static ("AppEnumsColor", values);
		g_once_init_leave (&app_enums_color_type_id__volatile, app_enums_color_type_id);
	}
	return app_enums_color_type_id__volatile;
}



