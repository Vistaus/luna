/* CalendarView.c generated by valac 0.40.11, the Vala compiler
 * generated from CalendarView.vala, do not modify */

/*
* Copyright (C) 2018  Carlos Lopez <calo_lrc@hotmail.com>
* 
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU Affero General Public License as published
* by the Free Software Foundation, either version 3 of the License, or
* (at your option) any later version.
* 
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Affero General Public License for more details.
* 
* You should have received a copy of the GNU Affero General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
* 
*/


#include <glib.h>
#include <glib-object.h>
#include <gtk/gtk.h>


#define APP_VIEWS_TYPE_CALENDAR_VIEW (app_views_calendar_view_get_type ())
#define APP_VIEWS_CALENDAR_VIEW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), APP_VIEWS_TYPE_CALENDAR_VIEW, AppViewsCalendarView))
#define APP_VIEWS_CALENDAR_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), APP_VIEWS_TYPE_CALENDAR_VIEW, AppViewsCalendarViewClass))
#define APP_VIEWS_IS_CALENDAR_VIEW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), APP_VIEWS_TYPE_CALENDAR_VIEW))
#define APP_VIEWS_IS_CALENDAR_VIEW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), APP_VIEWS_TYPE_CALENDAR_VIEW))
#define APP_VIEWS_CALENDAR_VIEW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), APP_VIEWS_TYPE_CALENDAR_VIEW, AppViewsCalendarViewClass))

typedef struct _AppViewsCalendarView AppViewsCalendarView;
typedef struct _AppViewsCalendarViewClass AppViewsCalendarViewClass;
typedef struct _AppViewsCalendarViewPrivate AppViewsCalendarViewPrivate;
enum  {
	APP_VIEWS_CALENDAR_VIEW_0_PROPERTY,
	APP_VIEWS_CALENDAR_VIEW_NUM_PROPERTIES
};
static GParamSpec* app_views_calendar_view_properties[APP_VIEWS_CALENDAR_VIEW_NUM_PROPERTIES];
#define _g_object_unref0(var) ((var == NULL) ? NULL : (var = (g_object_unref (var), NULL)))

#define APP_VIEWS_TYPE_DAYS_ROW (app_views_days_row_get_type ())
#define APP_VIEWS_DAYS_ROW(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), APP_VIEWS_TYPE_DAYS_ROW, AppViewsDaysRow))
#define APP_VIEWS_DAYS_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), APP_VIEWS_TYPE_DAYS_ROW, AppViewsDaysRowClass))
#define APP_VIEWS_IS_DAYS_ROW(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), APP_VIEWS_TYPE_DAYS_ROW))
#define APP_VIEWS_IS_DAYS_ROW_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), APP_VIEWS_TYPE_DAYS_ROW))
#define APP_VIEWS_DAYS_ROW_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), APP_VIEWS_TYPE_DAYS_ROW, AppViewsDaysRowClass))

typedef struct _AppViewsDaysRow AppViewsDaysRow;
typedef struct _AppViewsDaysRowClass AppViewsDaysRowClass;
#define _g_free0(var) (var = (g_free (var), NULL))

struct _AppViewsCalendarView {
	GtkBox parent_instance;
	AppViewsCalendarViewPrivate * priv;
};

struct _AppViewsCalendarViewClass {
	GtkBoxClass parent_class;
};

struct _AppViewsCalendarViewPrivate {
	GtkGrid* day_grid;
};


static gpointer app_views_calendar_view_parent_class = NULL;
static GList* app_views_calendar_view_labels;
static GList* app_views_calendar_view_labels = NULL;

GType app_views_calendar_view_get_type (void) G_GNUC_CONST;
#define APP_VIEWS_CALENDAR_VIEW_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), APP_VIEWS_TYPE_CALENDAR_VIEW, AppViewsCalendarViewPrivate))
AppViewsCalendarView* app_views_calendar_view_new (void);
AppViewsCalendarView* app_views_calendar_view_construct (GType object_type);
GType app_views_days_row_get_type (void) G_GNUC_CONST;
AppViewsDaysRow* app_views_days_row_new (void);
AppViewsDaysRow* app_views_days_row_construct (GType object_type);
void app_views_calendar_view_fill_grid_days (AppViewsCalendarView* self,
                                             gint start_day,
                                             gint max_day,
                                             gint current_day);
static void app_views_calendar_view_finalize (GObject * obj);


static gpointer
_g_object_ref0 (gpointer self)
{
#line 69 "/run/build/Luna/src/views/CalendarView.vala"
	return self ? g_object_ref (self) : NULL;
#line 94 "CalendarView.c"
}


AppViewsCalendarView*
app_views_calendar_view_construct (GType object_type)
{
	AppViewsCalendarView * self = NULL;
	gint max_labels = 0;
	AppViewsDaysRow* days_header = NULL;
	AppViewsDaysRow* _tmp0_;
	GtkGrid* _tmp1_;
	GtkGrid* _tmp2_;
	GtkGrid* _tmp3_;
	gint col = 0;
	gint row = 0;
	AppViewsDaysRow* _tmp28_;
	GtkGrid* _tmp29_;
#line 35 "/run/build/Luna/src/views/CalendarView.vala"
	self = (AppViewsCalendarView*) g_object_new (object_type, NULL);
#line 36 "/run/build/Luna/src/views/CalendarView.vala"
	gtk_orientable_set_orientation ((GtkOrientable*) self, GTK_ORIENTATION_VERTICAL);
#line 37 "/run/build/Luna/src/views/CalendarView.vala"
	max_labels = 42;
#line 38 "/run/build/Luna/src/views/CalendarView.vala"
	_tmp0_ = app_views_days_row_new ();
#line 38 "/run/build/Luna/src/views/CalendarView.vala"
	g_object_ref_sink (_tmp0_);
#line 38 "/run/build/Luna/src/views/CalendarView.vala"
	days_header = _tmp0_;
#line 45 "/run/build/Luna/src/views/CalendarView.vala"
	_tmp1_ = (GtkGrid*) gtk_grid_new ();
#line 45 "/run/build/Luna/src/views/CalendarView.vala"
	g_object_ref_sink (_tmp1_);
#line 45 "/run/build/Luna/src/views/CalendarView.vala"
	_g_object_unref0 (self->priv->day_grid);
#line 45 "/run/build/Luna/src/views/CalendarView.vala"
	self->priv->day_grid = _tmp1_;
#line 46 "/run/build/Luna/src/views/CalendarView.vala"
	_tmp2_ = self->priv->day_grid;
#line 46 "/run/build/Luna/src/views/CalendarView.vala"
	gtk_grid_set_column_homogeneous (_tmp2_, TRUE);
#line 47 "/run/build/Luna/src/views/CalendarView.vala"
	_tmp3_ = self->priv->day_grid;
#line 47 "/run/build/Luna/src/views/CalendarView.vala"
	gtk_grid_set_row_homogeneous (_tmp3_, FALSE);
#line 49 "/run/build/Luna/src/views/CalendarView.vala"
	col = 0;
#line 50 "/run/build/Luna/src/views/CalendarView.vala"
	row = 0;
#line 144 "CalendarView.c"
	{
		gint i = 0;
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
		i = 0;
#line 149 "CalendarView.c"
		{
			gboolean _tmp4_ = FALSE;
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
			_tmp4_ = TRUE;
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
			while (TRUE) {
#line 156 "CalendarView.c"
				gint _tmp6_;
				gint _tmp7_;
				GtkLabel* label_day = NULL;
				GtkLabel* _tmp8_;
				GtkLabel* _tmp9_;
				GtkStyleContext* _tmp10_;
				GtkLabel* _tmp11_;
				GtkLabel* _tmp12_;
				gint _tmp13_;
				GtkGrid* _tmp16_;
				GtkLabel* _tmp17_;
				gint _tmp18_;
				gint _tmp19_;
				gint _tmp20_;
				gboolean _tmp21_ = FALSE;
				gint _tmp22_;
				GtkLabel* _tmp25_;
				GtkLabel* _tmp26_;
				GtkLabel* _tmp27_;
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
				if (!_tmp4_) {
#line 178 "CalendarView.c"
					gint _tmp5_;
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp5_ = i;
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
					i = _tmp5_ + 1;
#line 184 "CalendarView.c"
				}
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp4_ = FALSE;
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp6_ = i;
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp7_ = max_labels;
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
				if (!(_tmp6_ < _tmp7_)) {
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
					break;
#line 196 "CalendarView.c"
				}
#line 53 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp8_ = (GtkLabel*) gtk_label_new ("");
#line 53 "/run/build/Luna/src/views/CalendarView.vala"
				g_object_ref_sink (_tmp8_);
#line 53 "/run/build/Luna/src/views/CalendarView.vala"
				label_day = _tmp8_;
#line 54 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp9_ = label_day;
#line 54 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp10_ = gtk_widget_get_style_context ((GtkWidget*) _tmp9_);
#line 54 "/run/build/Luna/src/views/CalendarView.vala"
				gtk_style_context_add_class (_tmp10_, "label-day");
#line 55 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp11_ = label_day;
#line 55 "/run/build/Luna/src/views/CalendarView.vala"
				gtk_widget_set_halign ((GtkWidget*) _tmp11_, GTK_ALIGN_CENTER);
#line 56 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp12_ = label_day;
#line 56 "/run/build/Luna/src/views/CalendarView.vala"
				gtk_widget_set_valign ((GtkWidget*) _tmp12_, GTK_ALIGN_CENTER);
#line 58 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp13_ = col;
#line 58 "/run/build/Luna/src/views/CalendarView.vala"
				if (_tmp13_ > 4) {
#line 222 "CalendarView.c"
					GtkLabel* _tmp14_;
					GtkStyleContext* _tmp15_;
#line 59 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp14_ = label_day;
#line 59 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp15_ = gtk_widget_get_style_context ((GtkWidget*) _tmp14_);
#line 59 "/run/build/Luna/src/views/CalendarView.vala"
					gtk_style_context_add_class (_tmp15_, "weekend");
#line 231 "CalendarView.c"
				}
#line 62 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp16_ = self->priv->day_grid;
#line 62 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp17_ = label_day;
#line 62 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp18_ = col;
#line 62 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp19_ = row;
#line 62 "/run/build/Luna/src/views/CalendarView.vala"
				gtk_grid_attach (_tmp16_, (GtkWidget*) _tmp17_, _tmp18_, _tmp19_, 1, 1);
#line 63 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp20_ = col;
#line 63 "/run/build/Luna/src/views/CalendarView.vala"
				col = _tmp20_ + 1;
#line 64 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp22_ = col;
#line 64 "/run/build/Luna/src/views/CalendarView.vala"
				if (_tmp22_ != 0) {
#line 251 "CalendarView.c"
					gint _tmp23_;
#line 64 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp23_ = col;
#line 64 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp21_ = (_tmp23_ % 7) == 0;
#line 257 "CalendarView.c"
				} else {
#line 64 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp21_ = FALSE;
#line 261 "CalendarView.c"
				}
#line 64 "/run/build/Luna/src/views/CalendarView.vala"
				if (_tmp21_) {
#line 265 "CalendarView.c"
					gint _tmp24_;
#line 65 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp24_ = row;
#line 65 "/run/build/Luna/src/views/CalendarView.vala"
					row = _tmp24_ + 1;
#line 66 "/run/build/Luna/src/views/CalendarView.vala"
					col = 0;
#line 273 "CalendarView.c"
				}
#line 68 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp25_ = label_day;
#line 68 "/run/build/Luna/src/views/CalendarView.vala"
				gtk_widget_set_no_show_all ((GtkWidget*) _tmp25_, TRUE);
#line 69 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp26_ = label_day;
#line 69 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp27_ = _g_object_ref0 (_tmp26_);
#line 69 "/run/build/Luna/src/views/CalendarView.vala"
				app_views_calendar_view_labels = g_list_append (app_views_calendar_view_labels, _tmp27_);
#line 52 "/run/build/Luna/src/views/CalendarView.vala"
				_g_object_unref0 (label_day);
#line 287 "CalendarView.c"
			}
		}
	}
#line 72 "/run/build/Luna/src/views/CalendarView.vala"
	_tmp28_ = days_header;
#line 72 "/run/build/Luna/src/views/CalendarView.vala"
	gtk_box_pack_start ((GtkBox*) self, (GtkWidget*) _tmp28_, TRUE, TRUE, (guint) 0);
#line 73 "/run/build/Luna/src/views/CalendarView.vala"
	_tmp29_ = self->priv->day_grid;
#line 73 "/run/build/Luna/src/views/CalendarView.vala"
	gtk_box_pack_end ((GtkBox*) self, (GtkWidget*) _tmp29_, TRUE, TRUE, (guint) 0);
#line 35 "/run/build/Luna/src/views/CalendarView.vala"
	_g_object_unref0 (days_header);
#line 35 "/run/build/Luna/src/views/CalendarView.vala"
	return self;
#line 303 "CalendarView.c"
}


AppViewsCalendarView*
app_views_calendar_view_new (void)
{
#line 35 "/run/build/Luna/src/views/CalendarView.vala"
	return app_views_calendar_view_construct (APP_VIEWS_TYPE_CALENDAR_VIEW);
#line 312 "CalendarView.c"
}


void
app_views_calendar_view_fill_grid_days (AppViewsCalendarView* self,
                                        gint start_day,
                                        gint max_day,
                                        gint current_day)
{
	gint day_number = 0;
#line 76 "/run/build/Luna/src/views/CalendarView.vala"
	g_return_if_fail (self != NULL);
#line 80 "/run/build/Luna/src/views/CalendarView.vala"
	day_number = 1;
#line 327 "CalendarView.c"
	{
		gint i = 0;
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
		i = 0;
#line 332 "CalendarView.c"
		{
			gboolean _tmp0_ = FALSE;
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
			_tmp0_ = TRUE;
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
			while (TRUE) {
#line 339 "CalendarView.c"
				gint _tmp2_;
				GtkLabel* label = NULL;
				GList* _tmp3_;
				gint _tmp4_;
				gconstpointer _tmp5_;
				GtkLabel* _tmp6_;
				GtkLabel* _tmp7_;
				GtkStyleContext* _tmp8_;
				GtkLabel* _tmp9_;
				GtkLabel* _tmp10_;
				GtkLabel* _tmp11_;
				GtkLabel* _tmp12_;
				gboolean _tmp13_ = FALSE;
				gint _tmp14_;
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
				if (!_tmp0_) {
#line 356 "CalendarView.c"
					gint _tmp1_;
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp1_ = i;
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
					i = _tmp1_ + 1;
#line 362 "CalendarView.c"
				}
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp0_ = FALSE;
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp2_ = i;
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
				if (!(_tmp2_ < 42)) {
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
					break;
#line 372 "CalendarView.c"
				}
#line 83 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp3_ = app_views_calendar_view_labels;
#line 83 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp4_ = i;
#line 83 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp5_ = g_list_nth_data (_tmp3_, (guint) _tmp4_);
#line 83 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp6_ = _g_object_ref0 ((GtkLabel*) _tmp5_);
#line 83 "/run/build/Luna/src/views/CalendarView.vala"
				label = _tmp6_;
#line 84 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp7_ = label;
#line 84 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp8_ = gtk_widget_get_style_context ((GtkWidget*) _tmp7_);
#line 84 "/run/build/Luna/src/views/CalendarView.vala"
				gtk_style_context_remove_class (_tmp8_, "day-empty");
#line 85 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp9_ = label;
#line 85 "/run/build/Luna/src/views/CalendarView.vala"
				gtk_widget_set_visible ((GtkWidget*) _tmp9_, TRUE);
#line 86 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp10_ = label;
#line 86 "/run/build/Luna/src/views/CalendarView.vala"
				g_object_set ((GtkWidget*) _tmp10_, "margin", 1, NULL);
#line 87 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp11_ = label;
#line 87 "/run/build/Luna/src/views/CalendarView.vala"
				g_object_set ((GtkWidget*) _tmp11_, "width-request", 38, NULL);
#line 88 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp12_ = label;
#line 88 "/run/build/Luna/src/views/CalendarView.vala"
				g_object_set ((GtkWidget*) _tmp12_, "height-request", 35, NULL);
#line 93 "/run/build/Luna/src/views/CalendarView.vala"
				_tmp14_ = i;
#line 93 "/run/build/Luna/src/views/CalendarView.vala"
				if (_tmp14_ < start_day) {
#line 93 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp13_ = TRUE;
#line 412 "CalendarView.c"
				} else {
					gint _tmp15_;
#line 93 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp15_ = i;
#line 93 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp13_ = _tmp15_ >= (max_day + start_day);
#line 419 "CalendarView.c"
				}
#line 93 "/run/build/Luna/src/views/CalendarView.vala"
				if (_tmp13_) {
#line 423 "CalendarView.c"
					GtkLabel* _tmp16_;
					GtkStyleContext* _tmp17_;
					GtkLabel* _tmp18_;
#line 94 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp16_ = label;
#line 94 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp17_ = gtk_widget_get_style_context ((GtkWidget*) _tmp16_);
#line 94 "/run/build/Luna/src/views/CalendarView.vala"
					gtk_style_context_add_class (_tmp17_, "day-empty");
#line 95 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp18_ = label;
#line 95 "/run/build/Luna/src/views/CalendarView.vala"
					gtk_widget_set_visible ((GtkWidget*) _tmp18_, FALSE);
#line 437 "CalendarView.c"
				} else {
					gboolean _tmp19_ = FALSE;
					GtkLabel* _tmp25_;
					gint _tmp26_;
					gchar* _tmp27_;
					gchar* _tmp28_;
					gint _tmp29_;
#line 101 "/run/build/Luna/src/views/CalendarView.vala"
					if (current_day != -1) {
#line 447 "CalendarView.c"
						gint _tmp20_;
#line 101 "/run/build/Luna/src/views/CalendarView.vala"
						_tmp20_ = i;
#line 101 "/run/build/Luna/src/views/CalendarView.vala"
						_tmp19_ = (_tmp20_ + 1) == (current_day + start_day);
#line 453 "CalendarView.c"
					} else {
#line 101 "/run/build/Luna/src/views/CalendarView.vala"
						_tmp19_ = FALSE;
#line 457 "CalendarView.c"
					}
#line 101 "/run/build/Luna/src/views/CalendarView.vala"
					if (_tmp19_) {
#line 461 "CalendarView.c"
						GtkLabel* _tmp21_;
						GtkStyleContext* _tmp22_;
						GtkLabel* _tmp23_;
						GtkStyleContext* _tmp24_;
#line 102 "/run/build/Luna/src/views/CalendarView.vala"
						_tmp21_ = label;
#line 102 "/run/build/Luna/src/views/CalendarView.vala"
						_tmp22_ = gtk_widget_get_style_context ((GtkWidget*) _tmp21_);
#line 102 "/run/build/Luna/src/views/CalendarView.vala"
						gtk_style_context_remove_class (_tmp22_, "weekend");
#line 103 "/run/build/Luna/src/views/CalendarView.vala"
						_tmp23_ = label;
#line 103 "/run/build/Luna/src/views/CalendarView.vala"
						_tmp24_ = gtk_widget_get_style_context ((GtkWidget*) _tmp23_);
#line 103 "/run/build/Luna/src/views/CalendarView.vala"
						gtk_style_context_add_class (_tmp24_, "label-today");
#line 478 "CalendarView.c"
					}
#line 106 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp25_ = label;
#line 106 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp26_ = day_number;
#line 106 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp27_ = g_strdup_printf ("%i", _tmp26_);
#line 106 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp28_ = _tmp27_;
#line 106 "/run/build/Luna/src/views/CalendarView.vala"
					gtk_label_set_label (_tmp25_, _tmp28_);
#line 106 "/run/build/Luna/src/views/CalendarView.vala"
					_g_free0 (_tmp28_);
#line 107 "/run/build/Luna/src/views/CalendarView.vala"
					_tmp29_ = day_number;
#line 107 "/run/build/Luna/src/views/CalendarView.vala"
					day_number = _tmp29_ + 1;
#line 496 "CalendarView.c"
				}
#line 82 "/run/build/Luna/src/views/CalendarView.vala"
				_g_object_unref0 (label);
#line 500 "CalendarView.c"
			}
		}
	}
}


static void
app_views_calendar_view_class_init (AppViewsCalendarViewClass * klass)
{
#line 30 "/run/build/Luna/src/views/CalendarView.vala"
	app_views_calendar_view_parent_class = g_type_class_peek_parent (klass);
#line 30 "/run/build/Luna/src/views/CalendarView.vala"
	g_type_class_add_private (klass, sizeof (AppViewsCalendarViewPrivate));
#line 30 "/run/build/Luna/src/views/CalendarView.vala"
	G_OBJECT_CLASS (klass)->finalize = app_views_calendar_view_finalize;
#line 516 "CalendarView.c"
}


static void
app_views_calendar_view_instance_init (AppViewsCalendarView * self)
{
#line 30 "/run/build/Luna/src/views/CalendarView.vala"
	self->priv = APP_VIEWS_CALENDAR_VIEW_GET_PRIVATE (self);
#line 525 "CalendarView.c"
}


static void
app_views_calendar_view_finalize (GObject * obj)
{
	AppViewsCalendarView * self;
#line 30 "/run/build/Luna/src/views/CalendarView.vala"
	self = G_TYPE_CHECK_INSTANCE_CAST (obj, APP_VIEWS_TYPE_CALENDAR_VIEW, AppViewsCalendarView);
#line 33 "/run/build/Luna/src/views/CalendarView.vala"
	_g_object_unref0 (self->priv->day_grid);
#line 30 "/run/build/Luna/src/views/CalendarView.vala"
	G_OBJECT_CLASS (app_views_calendar_view_parent_class)->finalize (obj);
#line 539 "CalendarView.c"
}


GType
app_views_calendar_view_get_type (void)
{
	static volatile gsize app_views_calendar_view_type_id__volatile = 0;
	if (g_once_init_enter (&app_views_calendar_view_type_id__volatile)) {
		static const GTypeInfo g_define_type_info = { sizeof (AppViewsCalendarViewClass), (GBaseInitFunc) NULL, (GBaseFinalizeFunc) NULL, (GClassInitFunc) app_views_calendar_view_class_init, (GClassFinalizeFunc) NULL, NULL, sizeof (AppViewsCalendarView), 0, (GInstanceInitFunc) app_views_calendar_view_instance_init, NULL };
		GType app_views_calendar_view_type_id;
		app_views_calendar_view_type_id = g_type_register_static (gtk_box_get_type (), "AppViewsCalendarView", &g_define_type_info, 0);
		g_once_init_leave (&app_views_calendar_view_type_id__volatile, app_views_calendar_view_type_id);
	}
	return app_views_calendar_view_type_id__volatile;
}



